/*
SQLyog Ultimate v12.08 (64 bit)
MySQL - 5.7.19 : Database - sg_blog
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`sg_blog` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `sg_blog`;

/*Table structure for table `sg_article` */

DROP TABLE IF EXISTS `sg_article`;

CREATE TABLE `sg_article` (
  `id` bigint(200) NOT NULL AUTO_INCREMENT,
  `title` varchar(256) DEFAULT NULL COMMENT '标题',
  `content` longtext COMMENT '文章内容',
  `summary` varchar(1024) DEFAULT NULL COMMENT '文章摘要',
  `category_id` bigint(20) DEFAULT NULL COMMENT '所属分类id',
  `thumbnail` varchar(256) DEFAULT NULL COMMENT '缩略图',
  `is_top` char(1) DEFAULT '0' COMMENT '是否置顶（0否，1是）',
  `status` char(1) DEFAULT '1' COMMENT '状态（0已发布，1草稿）',
  `view_count` bigint(200) DEFAULT '0' COMMENT '访问量',
  `is_comment` char(1) DEFAULT '1' COMMENT '是否允许评论 1是，0否',
  `create_by` bigint(20) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_by` bigint(20) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `del_flag` int(1) DEFAULT '0' COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COMMENT='文章表';

/*Data for the table `sg_article` */

insert  into `sg_article`(`id`,`title`,`content`,`summary`,`category_id`,`thumbnail`,`is_top`,`status`,`view_count`,`is_comment`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`) values (1,'JVM从入门到精通','# JVM与Java体系结构\n\n## 前言\n\n作为Java工程师的你曾被伤害过吗？你是否也遇到过这些问题？\n\n运行着的线上系统突然卡死，系统无法访问，甚至直接OOMM！\n\n- 想解决线上JVM GC问题，但却无从下手。\n- 新项目上线，对各种JVM参数设置一脸茫然，直接默认吧然后就JJ了\n- 每次面试之前都要重新背一遍JVM的一些原理概念性的东西，然而面试官却经常问你在实际项目中如何调优VM参数，如何解决GC、OOM等问题，一脸懵逼。\n\n\n大部分Java开发人员，除会在项目中使用到与Java平台相关的各种高精尖技术，对于Java技术的核心Java虚拟机了解甚少。\n\n一些有一定工作经验的开发人员，打心眼儿里觉得SSM、微服务等上层技术才是重点，基础技术并不重要，这其实是一种本末倒置的“病态”。如果我们把核心类库的API比做数学公式的话，那么Java虚拟机的知识就好比公式的推导过程。\n\n计算机系统体系对我们来说越来越远，在不了解底层实现方式的前提下，通过高级语言很容易编写程序代码。但事实上计算机并不认识高级语言\n\n\n\n## 架构师每天都在思考什么？\n\n- 应该如何让我的系统更快？\n- 如何避免系统出现瓶颈？\n\n知乎上有条帖子：应该如何看招聘信息，直通年薪50万+？\n\n- 参与现有系统的性能优化，重构，保证平台性能和稳定性\n- 根据业务场景和需求，决定技术方向，做技术选型\n- 能够独立架构和设计海量数据下高并发分布式解决方案，满足功能和非功能需求\n- 解决各类潜在系统风险，核心功能的架构与代码编写\n- 分析系统瓶颈，解决各种疑难杂症，性能调优等\n\n## 为什么要学习JVM\n\n- 面试的需要（BATJ、TMD，PKQ等面试都爱问）\n- 中高级程序员必备技能\n  - 项目管理、调优的需求\n\n- 追求极客的精神\n  - 比如：垃圾回收算法、JIT（及时编译器）、底层原理\n\n## Java vs C++\n\n垃圾收集机制为我们打理了很多繁琐的工作，大大提高了开发的效率，但是，垃圾收集也不是万能的，懂得JVM内部的内存结构、工作机制，是设计高扩展性应用和诊断运行时问题的基础，也是Java工程师进阶的必备能力。\n\n\n\nC语言需要自己来分配内存和回收内存，Java全部交给JVM进行分配和回收。\n\n\n\n## Java生态圈\n\nJava是目前应用最为广泛的软件开发平台之一。随着Java以及Java社区的不断壮大Java 也早已不再是简简单单的一门计算机语言了，它更是一个平台、一种文化、一个社区。\n\n- 作为一个平台，Java虚拟机扮演着举足轻重的作用\n  - Groovy、Scala、JRuby、Kotlin等都是Java平台的一部分\n\n- 作为灯种文化，Java几乎成为了“开源”的代名词。\n  - 第三方开源软件和框架。如Tomcat、Struts，MyBatis，Spring等。\n  - 就连JDK和JVM自身也有不少开源的实现，如openJDK、Harmony。\n- 作为一个社区，Java拥有全世界最多的技术拥护者和开源社区支持，有数不清的论坛和资料。从桌面应用软件、嵌入式开发到企业级应用、后台服务器、中间件，都可以看到Java的身影。其应用形式之复杂、参与人数之众多也令人咋舌。\n\n\n\n每个语言都需要转换成字节码文件，最后转换的字节码文件都能通过Java虚拟机进行运行和处理\n\n\n\n随着Java7的正式发布，Java虚拟机的设计者们通过JSR-292规范基本实现在Java虚拟机平台上运行非Java语言编写的程序。\n\nJava虚拟机根本不关心运行在其内部的程序到底是使用何种编程语言编写的，它只关心“字节码”文件。也就是说Java虚拟机拥有语言无关性，并不会单纯地与Java语言“终身绑定”，只要其他编程语言的编译结果满足并包含Java虚拟机的内部指令集、符号表以及其他的辅助信息，它就是一个有效的字节码文件，就能够被虚拟机所识别并装载运行。\n\n## 字节码\n\n我们平时说的java字节码，指的是用java语言编译成的字节码。准确的说任何能在jvm平台上执行的字节码格式都是一样的。所以应该统称为：jvm字节码。\n\n不同的编译器，可以编译出相同的字节码文件，字节码文件也可以在不同的JVM上运行。\n\nJava虚拟机与Java语言并没有必然的联系，它只与特定的二进制文件格式—Class文件格式所关联，Class文件中包含了Java虚拟机指令集（或者称为字节码、Bytecodes）和符号表，还有一些其他辅助信息。\n\n## 多语言混合编程\n\nJava平台上的多语言混合编程正成为主流，通过特定领域的语言去解决特定领域的问题是当前软件开发应对日趋复杂的项目需求的一个方向。\n\n试想一下，在一个项目之中，并行处理用clojure语言编写，展示层使用JRuby/Rails，中间层则是Java，每个应用层都将使用不同的编程语言来完成，而且，接口对每一层的开发者都是透明的，各种语言之间的交互不存在任何困难，就像使用自己语言的原生API一样方便，因为它们最终都运行在一个虚拟机之上。\n\n对这些运行于Java虚拟机之上、Java之外的语言，来自系统级的、底层的支持正在迅速增强，以JSR-292为核心的一系列项目和功能改进（如Da Vinci Machine项目、Nashorn引擎、InvokeDynamic指令、java.lang.invoke包等），推动Java虚拟机从“Java语言的虚拟机”向 “多语言虚拟机”的方向发展。\n\n## Java发展的重大事件\n\n- 1990年，在Sun计算机公司中，由Patrick Naughton、MikeSheridan及James Gosling领导的小组Green Team，开发出的新的程序语言，命名为oak，后期命名为Java\n- 1995年，Sun正式发布Java和HotJava产品，Java首次公开亮相。\n- 1996年1月23日sun Microsystems发布了JDK 1.0。\n- 1998年，JDK1.2版本发布。同时，sun发布了JSP/Servlet、EJB规范，以及将Java分成了J2EE、J2SE和J2ME。这表明了Java开始向企业、桌面应用和移动设备应用3大领域挺进。\n- 2000年，JDK1.3发布，Java HotSpot Virtual Machine正式发布，成为Java的默认虚拟机。\n- 2002年，JDK1.4发布，古老的Classic虚拟机退出历史舞台。\n- 2003年年底，Java平台的scala正式发布，同年Groovy也加入了Java阵营。\n- 2004年，JDK1.5发布。同时JDK1.5改名为JavaSE5.0。\n- 2006年，JDK6发布。同年，Java开源并建立了openJDK。顺理成章，Hotspot虚拟机也成为了openJDK中的默认虚拟机。\n\n- 2007年，Java平台迎来了新伙伴Clojure。\n- 2008年，oracle收购了BEA，得到了JRockit虚拟机。\n- 2009年，Twitter宣布把后台大部分程序从Ruby迁移到scala，这是Java平台的又一次大规模应用。\n- 2010年，oracle收购了sun，获得Java商标和最真价值的HotSpot虚拟机。此时，oracle拥有市场占用率最高的两款虚拟机HotSpot和JRockit，并计划在未来对它们进行整合：HotRockit\n- 2011年，JDK7发布。在JDK1.7u4中，正式启用了新的垃圾回收器G1。\n- 2017年，JDK9发布。将G1设置为默认Gc，替代CMS\n- 同年，IBM的J9开源，形成了现在的open J9社区\n- 2018年，Android的Java侵权案判决，Google赔偿oracle计88亿美元\n- 同年，oracle宣告JavagE成为历史名词JDBC、JMS、Servlet赠予Eclipse基金会\n- 同年，JDK11发布，LTS版本的JDK，发布革命性的zGc，调整JDK授权许可\n- 2019年，JDK12发布，加入RedHat领导开发的shenandoah GC\n\n\n\n在JDK11之前，oracleJDK中还会存在一些openJDK中没有的、闭源的功能。但在JDK11中，我们可以认为openJDK和oracleJDK代码实质上已经完全一致的程度。\n\n## 虚拟机与Java虚拟机\n\n### 虚拟机\n\n所谓虚拟机（Virtual Machine），就是一台虚拟的计算机。它是一款软件，用来执行一系列虚拟计算机指令。大体上，虚拟机可以分为系统虚拟机和程序虚拟机。\n\n- 大名鼎鼎的Visual Box，Mware就属于系统虚拟机，它们完全是对物理计算机的仿真，提供了一个可运行完整操作系统的软件平台。\n- 程序虚拟机的典型代表就是Java虚拟机，它专门为执行单个计算机程序而设计，在Java虚拟机中执行的指令我们称为Java字节码指令。\n\n无论是系统虚拟机还是程序虚拟机，在上面运行的软件都被限制于虚拟机提供的资源中。\n\n### Java虚拟机\n\nJava虚拟机是一台执行Java字节码的虚拟计算机，它拥有独立的运行机制，其运行的Java字节码也未必由Java语言编译而成。\n\nJVM平台的各种语言可以共享Java虚拟机带来的跨平台性、优秀的垃圾回器，以及可靠的即时编译器。\n\nJava技术的核心就是Java虚拟机（JVM，Java Virtual Machine），因为所有的Java程序都运行在Java虚拟机内部。\n\nJava虚拟机就是二进制字节码的运行环境，负责装载字节码到其内部，解释/编译为对应平台上的机器指令执行。每一条Java指令，Java虚拟机规范中都有详细定义，如怎么取操作数，怎么处理操作数，处理结果放在哪里。\n\n特点：\n\n- 一次编译，到处运行\n- 自动内存管理\n- 自动垃圾回收功能\n\n## JVM的位置\n\nJVM是运行在操作系统之上的，它与硬件没有直接的交互\n\n\nJava的体系结构\n\n\n## JVM整体结构\n\n- HotSpot VM是目前市面上高性能虚拟机的代表作之一。\n- 它采用解释器与即时编译器并存的架构。\n- 在今天，Java程序的运行性能早已脱胎换骨，已经达到了可以和C/C++程序一较高下的地步。\n\n\n\n执行引擎包含三部分：解释器，及时编译器，垃圾回收器\n\n## Java代码执行流程\n\n\n\n只是能生成被Java虚拟机所能解释的字节码文件，那么理论上就可以自己设计一套代码了\n\n## JVM的架构模型\n\nJava编译器输入的指令流基本上是一种基于栈的指令集架构，另外一种指令集架构则是基于寄存器的指令集架构。具体来说：这两种架构之间的区别：\n\n基于栈式架构的特点\n\n- 设计和实现更简单，适用于资源受限的系统；\n- 避开了寄存器的分配难题：使用零地址指令方式分配。\n- 指令流中的指令大部分是零地址指令，其执行过程依赖于操作栈。指令集更小，编译器容易实现。\n- 不需要硬件支持，可移植性更好，更好实现跨平台\n\n基于寄存器架构的特点\n\n- 典型的应用是x86的二进制指令集：比如传统的PC以及Android的Davlik虚拟机。\n- 指令集架构则完全依赖硬件，可移植性差\n- 性能优秀和执行更高效\n- 花费更少的指令去完成一项操作。\n- 在大部分情况下，基于寄存器架构的指令集往往都以一地址指令、二地址指令和三地址指令为主，而基于栈式架构的指令集却是以零地址指令为主方水洋\n\n### 举例\n\n同样执行2+3这种逻辑操作，其指令分别如下：\n\n基于栈的计算流程（以Java虚拟机为例）：\n\n```bash\niconst_2 //常量2入栈\nistore_1\niconst_3 // 常量3入栈\nistore_2\niload_1\niload_2\niadd //常量2/3出栈，执行相加\nistore_0 // 结果5入栈\n```\n\n而基于寄存器的计算流程\n\n```bash\nmov eax,2 //将eax寄存器的值设为1\nadd eax,3 //使eax寄存器的值加3\n```\n\n### 字节码反编译\n\n我们编写一个简单的代码，然后查看一下字节码的反编译后的结果\n\n```java\n/**\n * @author: 陌溪\n * @create: 2020-07-04-21:17\n */\npublic class StackStruTest {\n    public static void main(String[] args) {\n        int i = 2 + 3;\n    }\n}\n```\n\n然后我们找到编译后的 class文件，使用下列命令进行反编译\n\n```bash\njavap -v StackStruTest.class\n```\n\n得到的文件为:\n\n```\n  public static void main(java.lang.String[]);\n    descriptor: ([Ljava/lang/String;)V\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=2, locals=4, args_size=1\n         0: iconst_2\n         1: istore_1\n         2: iconst_3\n         3: istore_2\n         4: iload_1\n         5: iload_2\n         6: iadd\n         7: istore_3\n         8: return\n      LineNumberTable:\n        line 9: 0\n        line 10: 2\n        line 11: 4\n        line 12: 8\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0       9     0  args   [Ljava/lang/String;\n            2       7     1     i   I\n            4       5     2     j   I\n            8       1     3     k   I\n```\n\n## 总结\n\n由于跨平台性的设计，Java的指令都是根据栈来设计的。不同平台CPU架构不同，所以不能设计为基于寄存器的。优点是跨平台，指令集小，编译器容易实现，缺点是性能下降，实现同样的功能需要更多的指令。\n\n时至今日，尽管嵌入式平台已经不是Java程序的主流运行平台了（准确来说应该是HotSpotVM的宿主环境已经不局限于嵌入式平台了），那么为什么不将架构更换为基于寄存器的架构呢？\n\n### 栈\n\n- 跨平台性\n- 指令集小\n- 指令多\n- 执行性能比寄存器差\n\n## JVM生命周期\n\n### 虚拟机的启动\n\nJava虚拟机的启动是通过引导类加载器（bootstrap class loader）创建一个初始类（initial class）来完成的，这个类是由虚拟机的具体实现指定的。\n\n### 虚拟机的执行\n\n- 一个运行中的Java虚拟机有着一个清晰的任务：执行Java程序。\n- 程序开始执行时他才运行，程序结束时他就停止。\n- 执行一个所谓的Java程序的时候，真真正正在执行的是一个叫做Java虚拟机的进程。\n\n### 虚拟机的退出\n\n有如下的几种情况：\n\n- 程序正常执行结束\n\n- 程序在执行过程中遇到了异常或错误而异常终止\n- 由于操作系统用现错误而导致Java虚拟机进程终止\n- 某线程调用Runtime类或system类的exit方法，或Runtime类的halt方法，并且Java安全管理器也允许这次exit或halt操作。\n- 除此之外，JNI（Java Native Interface）规范描述了用JNI Invocation API来加载或卸载 Java虚拟机时，Java虚拟机的退出情况。\n\n## JVM发展历程\n\n### Sun Classic VM\n\n- 早在1996年Java1.0版本的时候，Sun公司发布了一款名为sun classic VM的Java虚拟机，它同时也是世界上第一款商用Java虚拟机，JDK1.4时完全被淘汰。\n- 这款虚拟机内部只提供解释器。现在还有及时编译器，因此效率比较低，而及时编译器会把热点代码缓存起来，那么以后使用热点代码的时候，效率就比较高。\n- 如果使用JIT编译器，就需要进行外挂。但是一旦使用了JIT编译器，JIT就会接管虚拟机的执行系统。解释器就不再工作。解释器和编译器不能配合工作。\n- 现在hotspot内置了此虚拟机。\n\n### Exact VM\n\n为了解决上一个虚拟机问题，jdk1.2时，sun提供了此虚拟机。\nExact Memory Management：准确式内存管理\n\n- 也可以叫Non-Conservative/Accurate Memory Management\n- 虚拟机可以知道内存中某个位置的数据具体是什么类型。|\n\n具备现代高性能虚拟机的维形\n\n- 热点探测（寻找出热点代码进行缓存）\n- 编译器与解释器混合工作模式\n\n只在solaris平台短暂使用，其他平台上还是classic vm，英雄气短，终被Hotspot虚拟机替换\n\n### HotSpot VM\n\nHotSpot历史\n\n- 最初由一家名为“Longview Technologies”的小公司设计\n- 1997年，此公司被sun收购；2009年，Sun公司被甲骨文收购。\n- JDK1.3时，HotSpot VM成为默认虚拟机\n\n目前Hotspot占有绝对的市场地位，称霸武林。\n\n- 不管是现在仍在广泛使用的JDK6，还是使用比例较多的JDK8中，默认的虚拟机都是HotSpot\n- Sun/oracle JDK和openJDK的默认虚拟机\n- 因此本课程中默认介绍的虚拟机都是HotSpot，相关机制也主要是指HotSpot的Gc机制。（比如其他两个商用虚机都没有方法区的概念）\n\n从服务器、桌面到移动端、嵌入式都有应用。\n\n名称中的HotSpot指的就是它的热点代码探测技术。\n\n- 通过计数器找到最具编译价值代码，触发即时编译或栈上替换\n- 通过编译器与解释器协同工作，在最优化的程序响应时间与最佳执行性能中取得平衡\n\n### JRockit\n\n专注于服务器端应用\n\n- 它可以不太关注程序启动速度，因此JRockit内部不包含解析器实现，全部代码都靠即时编译器编译后执行。\n\n大量的行业基准测试显示，JRockit JVM是世界上最快的JVM。\n\n- 使用JRockit产品，客户已经体验到了显著的性能提高（一些超过了70%）和硬件成本的减少（达50%）。\n\n优势：全面的Java运行时解决方案组合\n\n- JRockit面向延迟敏感型应用的解决方案JRockit Real Time提供以毫秒或微秒级的JVM响应时间，适合财务、军事指挥、电信网络的需要\n- MissionControl服务套件，它是一组以极低的开销来监控、管理和分析生产环境中的应用程序的工具。\n\n2008年，JRockit被oracle收购。\n\noracle表达了整合两大优秀虚拟机的工作，大致在JDK8中完成。整合的方式是在HotSpot的基础上，移植JRockit的优秀特性。\n\n高斯林：目前就职于谷歌，研究人工智能和水下机器人\n\n### IBM的J9\n\n全称：IBM Technology for Java Virtual Machine，简称IT4J，内部代号：J9\n\n市场定位与HotSpot接近，服务器端、桌面应用、嵌入式等多用途VM广泛用于IBM的各种Java产品。\n\n目前，有影响力的三大商用虚拟机之一，也号称是世界上最快的Java虚拟机。\n\n2017年左右，IBM发布了开源J9VM，命名为openJ9，交给EClipse基金会管理，也称为Eclipse OpenJ9\n\nOpenJDK   -> 是JDK开源了，包括了虚拟机\n\n### KVM和CDC / CLDC  Hotspot\n\noracle在Java ME产品线上的两款虚拟机为：CDC/CLDC HotSpot Implementation VM KVM（Kilobyte）是CLDC-HI早期产品目前移动领域地位尴尬，智能机被Angroid和ioS二分天下。\n\nKVM简单、轻量、高度可移植，面向更低端的设备上还维持自己的一片市场\n\n- 智能控制器、传感器\n- 老人手机、经济欠发达地区的功能手机\n\n所有的虚拟机的原则：一次编译，到处运行。\n\n### Azul VM\n\n前面三大“高性能Java虚拟机”使用在通用硬件平台上这里Azu1VW和BEALiquid VM是与特定硬件平台绑定、软硬件配合的专有虚拟机I\n\n- 高性能Java虚拟机中的战斗机。\n\nAzul VM是Azu1Systems公司在HotSpot基础上进行大量改进，运行于Azul Systems公司的专有硬件Vega系统上的ava虚拟机。\n\n每个Azu1VM实例都可以管理至少数十个CPU和数百GB内存的硬件资源，并提供在巨大内存范围内实现可控的GC时间的垃圾收集器、专有硬件优化的线程调度等优秀特性。\n\n2010年，AzulSystems公司开始从硬件转向软件，发布了自己的zing JVM，可以在通用x86平台上提供接近于Vega系统的特性。\n\n### Liquid VM\n\n高性能Java虚拟机中的战斗机。\n\nBEA公司开发的，直接运行在自家Hypervisor系统上Liquid VM即是现在的JRockit VE（Virtual Edition），\n\nLiquid VM不需要操作系统的支持，或者说它自己本身实现了一个专用操作系统的必要功能，如线程调度、文件系统、网络支持等。\n\n随着JRockit虚拟机终止开发，Liquid vM项目也停止了。\n\n### Apache Marmony\n\nApache也曾经推出过与JDK1.5和JDK1.6兼容的Java运行平台Apache Harmony。\n\n它是IElf和Inte1联合开发的开源JVM，受到同样开源的openJDK的压制，Sun坚决不让Harmony获得JCP认证，最终于2011年退役，IBM转而参与OpenJDK\n\n虽然目前并没有Apache Harmony被大规模商用的案例，但是它的Java类库代码吸纳进了Android SDK。\n\n### Micorsoft JVM\n\n微软为了在IE3浏览器中支持Java Applets，开发了Microsoft JVM。\n\n只能在window平台下运行。但确是当时Windows下性能最好的Java VM。\n\n1997年，sun以侵犯商标、不正当竞争罪名指控微软成功，赔了sun很多钱。微软windowsXPSP3中抹掉了其VM。现在windows上安装的jdk都是HotSpot。\n\n### Taobao JVM\n\n由AliJVM团队发布。阿里，国内使用Java最强大的公司，覆盖云计算、金融、物流、电商等众多领域，需要解决高并发、高可用、分布式的复合问题。有大量的开源产品。\n\n基于openJDK开发了自己的定制版本AlibabaJDK，简称AJDK。是整个阿里Java体系的基石。\n\n基于openJDK Hotspot VM发布的国内第一个优化、深度定制且开源的高性能服务器版Java虚拟机。\n\n- 创新的GCIH（GCinvisible heap）技术实现了off-heap，即将生命周期较长的Java对象从heap中移到heap之外，并且Gc不能管理GCIH内部的Java对象，以此达到降低GC的回收频率和提升Gc的回收效率的目的。\n- GCIH中的对象还能够在多个Java虚拟机进程中实现共享\n- 使用crc32指令实现JvM intrinsic降低JNI的调用开销\n- PMU hardware的Java profiling tool和诊断协助功能\n- 针对大数据场景的ZenGc \n\ntaobao vm应用在阿里产品上性能高，硬件严重依赖inte1的cpu，损失了兼容性，但提高了性能\n\n目前已经在淘宝、天猫上线，把oracle官方JvM版本全部替换了。\n\n### Dalvik VM\n\n谷歌开发的，应用于Android系统，并在Android2.2中提供了JIT，发展迅猛。\n\nDalvik y只能称作虚拟机，而不能称作“Java虚拟机”，它没有遵循 Java虚拟机规范\n\n不能直接执行Java的Class文件\n\n基于寄存器架构，不是jvm的栈架构。\n\n执行的是编译以后的dex（Dalvik Executable）文件。执行效率比较高。\n\n- 它执行的dex（Dalvik Executable）文件可以通过class文件转化而来，使用Java语法编写应用程序，可以直接使用大部分的Java API等。\n\nAndroid 5.0使用支持提前编译（Ahead of Time Compilation，AoT）的ART VM替换Dalvik VM。\n\n### Graal VM\n\n2018年4月，oracle Labs公开了GraalvM，号称 \"Run Programs Faster Anywhere\"，勃勃野心。与1995年java的”write once，run anywhere\"遥相呼应。\n\nGraalVM在HotSpot VM基础上增强而成的跨语言全栈虚拟机，可以作为“任何语言”\n的运行平台使用。语言包括：Java、Scala、Groovy、Kotlin；C、C++、Javascript、Ruby、Python、R等\n\n支持不同语言中混用对方的接口和对象，支持这些语言使用已经编写好的本地库文件\n\n工作原理是将这些语言的源代码或源代码编译后的中间格式，通过解释器转换为能被Graal VM接受的中间表示。Graal VM提供Truffle工具集快速构建面向一种新语言的解释器。在运行时还能进行即时编译优化，获得比原生编译器更优秀的执行效率。\n\n如果说HotSpot有一天真的被取代，Graalvm希望最大。但是Java的软件生态没有丝毫变化。\n\n### 总结\n\n具体JVM的内存结构，其实取决于其实现，不同厂商的JVM，或者同一厂商发布的不同版本，都有可能存在一定差异。主要以oracle HotSpot VM为默认虚拟机。','  从JVM角度进行分析，类的前端编译器开始，通过类加载器，堆、栈，之后经过后端编译器的过程分析。即主体可以分为JVM内存和回收篇，和JVM类加载器篇。本文对细节把控比较到位，大家最好放平心态，以长时间的学习计划为标准进行学习',1,'http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/OIP-C.jpg','1','0',8,'0',1,'2022-10-20 23:20:11',1,'2023-01-08 11:02:38',0),(2,'细谈云菫，璃月最生动的角色','## 人物介绍\n![image20211219121555979.png](http://dingyue.ws.126.net/2022/0109/a5705bd5g00r5fxv403oac000bu00dcm.gif)\n\n# 1.人物造型 \n\n### 1.1 服饰简介\n\n​首先，云堇的服饰名为 **氍毹烟云**，是由飞云商会巧手的裁缝设计制作的裙装，其中融入了大量戏曲元素，其帽子上的绒球化用自戏曲女将头上的“七星额子”，像《穆桂英挂帅》中的穆桂英就是采用的这种绒球\n\n\n![image202111555979.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2F6443a0dej00r5fxv3002bc000ht009wm.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n### 1.2 细节补充\n而云堇腰部则是化用了戏曲武将角色中的“靠肚”，云堇的裙子虽然是短裙，但也依旧借鉴了女将的飘带，当然其中还有很多细节性的东西，也都都化用了戏曲服装，虽然云堇身上的衣服也不完全是根据戏曲中的戏服设计的，但其中融合的戏曲元素，却能让国内玩家一眼就看出云堇的职业。\n\n![image20211215094003288.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2F3be8328dj00r5fxv3001nc000ht00aim.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n<br>\n![image154445.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2Ff07ac5ddj00r5fxv30028c000ht009im.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n\n# 2.​命座详解\n\n### 2.1 元素战技\n\n云堇的技能和命座也很有讲究，其技能旋云开相在释放的时候，云堇会摆出武戏的架势，挥舞长枪的同时，背后会出现5把旗子，类似于戏曲角儿背后的靠旗，相信大部分国内玩家应该一眼就能认出吧。\n\n![image60211219121551.png](http://dingyue.ws.126.net/2022/0109/86977df0g00r5fxv401tkc000bm006nm.gif)\n\n### 2.2 命座介绍\n\n云堇的命座也是根据戏曲中的一些招式来命名的，像飞身趟马，趟马就是用虚拟手法以鞭当马、并运用多种丰富多彩的舞蹈动作，来表现人骑马飞跑，人在马上握住挥鞭，而马不停蹄飞奔急驰的情景。由此可见，米哈游在云堇身上确实是下了一番功夫的。\n\n![image5115451.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2F2b9c6e44j00r5fxv30014c000ht0094m.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n\n# 3.多方赞扬\n\n### 3.1 神女劈观\n\n云堇唱戏那一段，在各国的版本中，都是以中文的形式唱出来的，这是“强制”海外玩家来听戏曲啊，虽然外国玩家听不懂，但是出于好奇心，还真可能有人会去了解，这也算是弘扬传统文化，向世界展示我们传统戏曲的魅力。\n\n![image3242332.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2F36e36fcfj00r5fxv3001wc000ht0098m.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n\n### 3.2官方发言\n\n云堇的戏腔，也获得海内外玩家的好评，以及官媒的认可。《文汇报》、《中国新闻网》都发布文章，报道了云堇在海外掀起传统戏曲热潮的现象。\n<br>\n\n![image4975y34795.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2F41296f0bj00r5fxv4003pc000ht00plm.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n\n\n而我国驻大阪总领事薛剑，也在云堇的《神女劈观》的评论区里，表达了自己的赞美。只能说《原神》被商务部认证的\"文化出口重点项目\"，真的是名不虚传！\n\n![image32947234324923.png](https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2022%2F0109%2F3df0e0f3j00r5fxv3001cc000h300nkm.jpg&thumbnail=660x2147483647&quality=80&type=jpg)\n\n\n### 最后分享一张云菫英气十足的图片\n![imageawfna.png](http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/FFVHI9UaQAMHFUQ.jpg)','在1月6日，原神公布云瑾剧情PV—神女劈观后，云堇漂亮飒爽的身姿，宛如天籁的唱腔惊艳全球，让各国玩家惊叹不已。其蕴含的传统戏剧元素，成了玩家们探究的热点。同时，云菫也是本人热爱的一名角色，此篇文章会将云堇从头到尾、从外到内地详细解析一遍。',2,'http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/QQ%E5%9B%BE%E7%89%8720230107144726.png','1','0',25,'0',1,'2023-01-03 08:50:03',1,'2023-01-07 07:05:55',0),(8,'一同随梦想奔驰吧！——赛马娘2','\n当时的我怎么也不会想到几个月后我会在一部看似娘化赛马的“媚宅”剧前感动的痛哭流涕，我自认为泪点还是比较高的，但在这种神回批发的攻势下还是顶不住，这是一部严重被番剧名字耽误的好番。印像中上一次让我哭的这么痛快的还是多年前看的clanned after story。可是cl有足足长达三十多集的铺垫，赛马娘第一季几乎是和第二季平行，也就是说真正十三集让我哭的这么惨的，可能只有赛马娘一家。<br>\n<img src=\"https://pic1.zhimg.com/50/v2-bb375a0a4c9393534d8d1969bee2fe10_720w.jpg?source=1940ef5c\" data-rawwidth=\"1080\" data-rawheight=\"731\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-322ac61e2d567801362d8879a6056f6f_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pica.zhimg.com/v2-bb375a0a4c9393534d8d1969bee2fe10_r.jpg?source=1940ef5c\"/>  <br>\n赛马娘如此优秀的原因之一莫过于其有真实事件背书的这个强大的设定，赛马娘第二季中大部分角色在现实中都有对应的真实赛马，各位角色的传奇的经历无疑为故事的趣味性和戏剧性大大加分，毕竟剧本还要将逻辑，而现实经常时是不讲道理的。比如剧中主线东海帝王的三败三起，如果是架空设定，重复的失败无疑容易引起观众们的审美疲劳，而那么多的伤病积累下的东海帝王居然还能浴火重生，又有些“失真。”但这些不可思议的奇迹都是真真切切发生过的事情，这就减少人们对剧情逻辑上的纠结。专注于体会创作者想要表达的感情\n<br>\n<img src=\"https://picx.zhimg.com/50/v2-742e77e13bd615124c5c6d6e9f4b98ad_720w.jpg?source=1940ef5c\" data-rawwidth=\"1080\" data-rawheight=\"765\" data-size=\"normal\" data-default-watermark-src=\"https://pica.zhimg.com/50/v2-cbdc03f5d091f09487f1fbc821da4656_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://picx.zhimg.com/v2-742e77e13bd615124c5c6d6e9f4b98ad_r.jpg?source=1940ef5c\"/>  \n<br>这一点至关重要，“代入感“是所有故事创作者都不能忽视的一个重要问题，很多作者甚至为了”趣味“和”逻辑“牺牲了一部分的表达，而赛马娘完全不需要考虑这些，专注于表达即可。这一点可以说是非常先锋大胆的表现模式，这些人们口口流传的奇迹，比如东海帝王不可思议的三败三起，双涡轮的一骑绝尘的完美逃亡，”黑色刺客“米浴对名马接二连三的”刺杀“，还有第一季中无声铃鹿绝世的遗憾，和特别周对其遗志的传承。这些事情本身都让人眼眶一湿，更何况在优秀的分镜和配乐下演出呢？赛马娘最后一集播出前，有人戏称”仅仅是把当初东海帝王的比赛视频原封不动的放上去都是神回“，其原因也莫过于此。\n<br><img src=\"https://picx.zhimg.com/50/v2-a4e91b64786e8b90e78fd00f8e5ebdbe_720w.jpg?source=1940ef5c\" data-rawwidth=\"640\" data-rawheight=\"397\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-afe08b6fcb01478975253f9dd75380ab_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a4e91b64786e8b90e78fd00f8e5ebdbe_r.jpg?source=1940ef5c\"/> \n<br> 但话说回来，优秀原型的背书只是增加了作品的上限。赛马娘制作团队们结合事实进行的优秀改编以及情节上的安排也非常重要，比如安排帝皇和麦昆作为竞争对手的设定，将双涡轮的大逃亡和帝王的第三次崛起相结合，将帝皇不可思议的奇迹复活与麦昆的伤病结合在一起，这些教科书式的编排，让情节超越了单个故事平铺直叙的上限，是真正意义上超越原型的改编。\n<br><img src=\"https://picx.zhimg.com/50/v2-753318802bf09f03a1f903768ff93559_720w.jpg?source=1940ef5c\" data-rawwidth=\"640\" data-rawheight=\"505\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e0b87c65bf08c227ec703d4ef2c702d6_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://picx.zhimg.com/v2-753318802bf09f03a1f903768ff93559_r.jpg?source=1940ef5c\"/>  更重要的是，PA的演出和分镜让关键剧情的感情渲染更加浓烈，比如第二集时帝皇永远无法延续三连冠时的不甘，动画中让帝皇想象自己在赛道上的状况来表现自己痛苦的心境，这里就远比痛哭或者是勉强笑更让人心痛，非战之罪，实天之过也。帝皇悲情的一面生动的展现，而其后众马为了追赶帝皇的步伐而奋起又让帝皇的振作变得合情合理，再加上之前训练员的拼命努力，短短的六分钟内一口气解决了三种冲突，从这里就可以看出主创们的野心和功底。\n<br>\n<img src=\"https://picx.zhimg.com/50/v2-dd3e382b0ff77db581baba7d7d725c87_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-bd9473dc6bb22622190f68fbb0081a82_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-dd3e382b0ff77db581baba7d7d725c87_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-42e572dcc70360dcc8f4e1b0d5882fcf_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-91f27d77875089b3b87fca1c5ea6c26a_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-42e572dcc70360dcc8f4e1b0d5882fcf_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-41bdedd58ac1e5379178d02601df602a_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-b5408beb1123ee125247f1d2645926e4_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-41bdedd58ac1e5379178d02601df602a_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-c825d223c105367430b0bda7e8f52b61_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-875ed6c6c65ccdef596ad077744f6950_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-c825d223c105367430b0bda7e8f52b61_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-13336a3d7f1070c937a0a7efd3bfac64_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f31f7c89977153f6ab2fb67a041e0c9d_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-13336a3d7f1070c937a0a7efd3bfac64_r.jpg?source=1940ef5c\"/>黑色刺客那里虽然也不错，但对我不是非常触动。真正想要细说的是第九第十集。<img src=\"https://pic1.zhimg.com/50/v2-98513b6cfd889b9d396a6787c18701fb_720w.jpg?source=1940ef5c\" data-rawwidth=\"1080\" data-rawheight=\"607\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-a31b1d95ee94665a9726670623f887ef_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://picx.zhimg.com/v2-98513b6cfd889b9d396a6787c18701fb_r.jpg?source=1940ef5c\"/>\n\n从三冠王到不败的赛马娘，再到为了和麦昆成为对手，帝皇一次又一次的制定目标，然后失败，然后再想崛起的理由。可惜的是到最后连成为竞争对手的资格都已经不复存在。三次骨折后所诊断的疑似习惯性骨折几乎彻底断绝了帝皇继续的赛场旅程，这时能给帝皇带来信心的人无非会长，麦昆寥寥数人，可惜的是会长的成熟和对帝皇的关怀让她也无法在这件事上帮帝皇做决定，而麦昆沉浸在帝皇将要退役的打击以及性格方面的不够坦诚也无法出手，剩下的角色似乎都有些不够格，观众们此时和帝皇一同处在紧张焦虑的心情中。\n<img src=\"https://pica.zhimg.com/50/v2-7fe376aa98ad4dfda17703d54505ee32_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-1cabeaa42454fa8f052f9eb16c7ee483_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-7fe376aa98ad4dfda17703d54505ee32_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-45d0661e535a8ceb72b586819595a260_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3d3614c9d67335d3656742fcd93ade4b_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-45d0661e535a8ceb72b586819595a260_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-aa96f18257cf7fb069c04d36aedace9e_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-6fd1f7af5b54c50959c934f411c93897_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-aa96f18257cf7fb069c04d36aedace9e_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-9b976265da022f2e700759deeed84bb7_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-9f424ab291c866f8a1863d4b7ea7777e_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-9b976265da022f2e700759deeed84bb7_r.jpg?source=1940ef5c\"/>  \n<br>帝皇是不知道未来的结果，观众们虽然知道未来帝皇一定会再次崛起，但不清楚过程，强行的再起不但可能造成人设和情节上的崩坏，还很有可能让最后的奇迹复活大打折扣。  于是体现了PA巅峰的改编水平的第十集横空出世，虽然我个人觉得最后一集的感染力更强，但那式原型的下限就非常高，最能体现PA水准的还是第十集。<img src=\"https://picx.zhimg.com/50/v2-d9ac0efdf16252358bc6e6414bfb0665_720w.jpg?source=1940ef5c\" data-rawwidth=\"1024\" data-rawheight=\"576\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-73f47e8e49157264967c5f4c96cd4fa1_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://picx.zhimg.com/v2-d9ac0efdf16252358bc6e6414bfb0665_r.jpg?source=1940ef5c\"/>\n<br>  双涡轮的角色塑造本身远远达不到帮帝皇恢复信心的标准，甚至高傲的帝皇前十集连她的名字都记不清楚，理论上就算是优秀素质和米浴都轮不到她。但双涡轮不玩嘴遁那种空洞无力的手法，直接用事实说话。第十集的结尾本来应该上演退役演唱会歌曲的大屏幕上意料之外的现出了双涡轮一骑绝尘的狂奔，从开始到最后全部领先的完美大逃亡，对手中也有米浴这样的顶尖赛马，配合着配乐“愿望的形状”的配乐声中，响起了解说员激动不已的解说词，然后镜头一转狂奔的双涡轮拼命的喊出“东海帝皇！这就叫做永不言弃！“实在是让人泪腺决堤。<img src=\"https://pic1.zhimg.com/50/v2-df5c1e21adcac43605f9f798f3645516_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-d6f3d733be787c51016a2c31d716f75d_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-df5c1e21adcac43605f9f798f3645516_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-72e3acaa5c2da2f297c2becf9e499f1a_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2df28857fd8ea707a5a1adc1d5ea0534_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-72e3acaa5c2da2f297c2becf9e499f1a_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-7276144e5692712df35ee5111150aeec_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-bdd723d08547ffd6c4b228b572f0cd80_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-7276144e5692712df35ee5111150aeec_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-761236c8e21f235b8bc669626afb3e15_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a9f32f84fcdb3b52931d3fa18146f576_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-761236c8e21f235b8bc669626afb3e15_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-4cdccd9aaef1daf6493e61c3b8043fe3_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2c5990348c40c39eb20d04fcd1feb563_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-4cdccd9aaef1daf6493e61c3b8043fe3_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-908f2cb0f6e32d4e38a37fb56437d0ce_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-f49b2f7a8670765d6105b46a5d88763d_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-908f2cb0f6e32d4e38a37fb56437d0ce_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-15a6c3960d06d56db2a1cf61fabdffdc_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-2124c1c9d0afa82a03264df800129988_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-15a6c3960d06d56db2a1cf61fabdffdc_r.jpg?source=1940ef5c\"/><img src=\"https://pica.zhimg.com/50/v2-36a9a7a6afc8cc03b2b4ce0a877e5148_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-66b1393d66efa50e3c157091353329da_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-36a9a7a6afc8cc03b2b4ce0a877e5148_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-4d3db5bf313296ceb2fb5be21096fec0_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-89cbb8a16e402ff3897e0471bb923838_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-4d3db5bf313296ceb2fb5be21096fec0_r.jpg?source=1940ef5c\"/>\n<br>双涡轮大逃亡的感人之处不仅仅在于和帝皇崛起的关联，它的本身就非常动人，双涡轮本身的素质非常普通，体型也比别的赛马差很多，仅仅是凭借着逃亡的本能永不言弃的狂奔，创造出了一个奇迹，普通的双涡轮都是如此，那么身为天才的帝皇还有什么理由逃避呢？  最后就是情感上的巅峰的12，13集，12集的强悍之处是把身为第二主角的麦昆的形象立了起来，麦昆前期在帝皇颓废时候的表现多少有些不近人情，而在这次她自己的伤病中才展现出了帝皇在她心底无与伦比的地位，前面的冷漠顿时转变为了无所适从的不安，让东海帝皇的付出又多了一个使命。<img src=\"https://picx.zhimg.com/50/v2-e3b14406d1c45ae496fc582517c15b94_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-ddc29057b96e0fa04afed513a0b20455_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pica.zhimg.com/v2-e3b14406d1c45ae496fc582517c15b94_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-e035847fa289313eca1622504318164a_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fc21ad13c0b426cbc4121df00534bfdd_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-e035847fa289313eca1622504318164a_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-7c02f0ae8e7ed67533183c4bfd797f1e_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-12e24518826998a6df9cb9622cedbd46_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-7c02f0ae8e7ed67533183c4bfd797f1e_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-e77213d1beb0f02ee8c609d1697bf990_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-2ae3c62cb17c207da77889faa3c5b671_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-e77213d1beb0f02ee8c609d1697bf990_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-450175f72fcc84c9fb2473c34d092ffc_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pica.zhimg.com/50/v2-c394398d5f2398067bb7a6e978434eed_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-450175f72fcc84c9fb2473c34d092ffc_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-09f6ebf687a35943b2186d73885e9e08_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-181102a135330e76b41dcb1537adeb2c_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pica.zhimg.com/v2-09f6ebf687a35943b2186d73885e9e08_r.jpg?source=1940ef5c\"/>\n<br>而十三集的奇迹复活故事本身已经不必多说，但有一个情节上的安排很有意思，一个是麦昆的到场，前面十二集两人的惺惺相惜让人难免会产生一种思维定式—多少是要麦昆的到场激起了帝皇的斗志，这一点阅番量越多的人反而越会出现思维定势，特别是结合第一季的铃鹿和特别周，但最后的剧情却杀了一个措手不及，麦昆的中途到场倒是在意料之中，但没想到的是帝皇的不屈完全是凭借自己的意志。<img src=\"https://picx.zhimg.com/50/v2-bb77e3bc689015c1291b08a3ec489991_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-032dc1e0640442f9d874a068948de2c9_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-bb77e3bc689015c1291b08a3ec489991_r.jpg?source=1940ef5c\"/> \n<br>我觉得这里的处理非常精妙，因为它将两个套路式的剧情模式混搭，一是东海帝皇的起步不佳但中途必然的崛起，二是麦昆和帝皇两人的羁绊和鼓励，反而造成了双重诈骗的效果，起步不佳反而导致人们加强了麦昆到场后帝皇才会觉醒的预判，麦昆的到场导致人们预判一个仍然处于队伍中后段的帝皇，但两度全部反转，而且还很有道理，让最后大家意料之中的剧情中又多了几分意料之外的惊喜，并且对最后的情感渲染起到了加分的效果，非常厉害。最后冲刺阶段的解说词完全是照搬真实的解说词，情感张力已经不用多说，声优也一改之前的娇气，完全变成了坚毅和执着的声调，伴随着最后的冲刺，实在让人泣不成声。<img src=\"https://picx.zhimg.com/50/v2-e3f91bb35d7876db1a2ededa76cc470b_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-661b8290b9dba786b90e387a19771942_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-e3f91bb35d7876db1a2ededa76cc470b_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-d8e8cae973bd17e53ec3ef83bffe10ee_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-a354b6b4bb4ea8c73b3b9aeddf1332d3_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-d8e8cae973bd17e53ec3ef83bffe10ee_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-afb120d462e9e1cc5087bcbc62db8db6_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-70aab6c81b31c6e9121224d7139bddd9_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-afb120d462e9e1cc5087bcbc62db8db6_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-47519fe39b19cad77208db504a8751d6_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-dedb5c894f0aff8d65cecd48f65e8232_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-47519fe39b19cad77208db504a8751d6_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-6055493b2cac6a216f02c5cdd598f0de_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-919f3c88a36ed471ec0ceda38e03f6d7_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-6055493b2cac6a216f02c5cdd598f0de_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-8cec9533a2176738a274e2b4fb6e2bc0_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-32a5e76324cd01f420eafa069bb0ac71_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-8cec9533a2176738a274e2b4fb6e2bc0_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-72043d1b0d3f2848f4c2b0679465a544_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-5052c00aae94ff9e51bed771e8191fe6_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-72043d1b0d3f2848f4c2b0679465a544_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-c9b978c7c744b8f19b36393712b340bb_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6b1befc7e8e575f77805ec8aee32a056_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-c9b978c7c744b8f19b36393712b340bb_r.jpg?source=1940ef5c\"/><img src=\"https://pica.zhimg.com/50/v2-9afbc5dbb626f248d663e0278f0c6bb6_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-494f8fb9512b3c728a90d421c821fb59_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-9afbc5dbb626f248d663e0278f0c6bb6_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-3c6ff6c2ab4344e58b8d60d9cbdb8377_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-cf103a7eafdf0edc45321aacef40e22e_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-3c6ff6c2ab4344e58b8d60d9cbdb8377_r.jpg?source=1940ef5c\"/><img src=\"https://pica.zhimg.com/50/v2-d12a995df15ce359e563dbd8395bb4f2_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-28afbff2e1170d84c3d89ce39dd8a591_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-d12a995df15ce359e563dbd8395bb4f2_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-375a29c5af49382a6680321ef1c4ed03_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-179edf252b74b608f7cb9e89c141a459_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-375a29c5af49382a6680321ef1c4ed03_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-3bec8adcf8c8e02bce17307f2095f071_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-18bc55321e1b02c5a117be36acecd286_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-3bec8adcf8c8e02bce17307f2095f071_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-3e06e842d401cfab66e934cb83c9e40d_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-43fc4afef5458b8e4d4dca8a1eca0c5b_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pic1.zhimg.com/v2-3e06e842d401cfab66e934cb83c9e40d_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-32986bbdbc7829095b52d521433a52a5_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pica.zhimg.com/50/v2-a19419f384def70304b265a06a6c5e3a_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://pica.zhimg.com/v2-32986bbdbc7829095b52d521433a52a5_r.jpg?source=1940ef5c\"/><img src=\"https://pic1.zhimg.com/50/v2-27a64e3a6dce5c6aaae9a12a98af9cdd_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1794e051bb1ca1c991b1de948501005b_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-27a64e3a6dce5c6aaae9a12a98af9cdd_r.jpg?source=1940ef5c\"/>\n<br>赛马娘故事本身简单的一句话就可以说完，主旨上也是一些耳熟能详的道理，但真正能理解“永不言弃“内涵的人却不是很多。  东海帝皇一直在寻找着自己拼命奔跑的理由，小时候是想像会长那样成为三冠赛马娘，但因为意料之外的伤病错失良机，然后又用成为不败的赛马娘这一目标要求自己，然后真正意义上第一次赢来了自己实力不足的惨痛失败，失去光环的帝皇变得无所适从，最后用成为好友嫁衣般的梦想来勉励自己，可惜的是命运连这个自欺欺人的借口的机会都不给予。<img src=\"https://pic1.zhimg.com/50/v2-7911f8f0940d37f9960bc49a6200905f_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-405452e7ef83ca5f5dfd2638a17b40c5_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-7911f8f0940d37f9960bc49a6200905f_r.jpg?source=1940ef5c\"/>\n<br>终于失去所有“理由“的帝皇痛苦的选择了退役，虽然满腔的不甘与痛苦，但完全找不到前行的理由，所以这也是无可奈何的选择。  东海帝皇的三次的挫败又何不是每一个青少年的必经之路，年少时心高气傲有凭借能力阴阳差错般取得了一些小小成就便自认为无所不能，第一次惨痛的挫败后又故作坚强的继续前进，但迎来的是生活一次比一次更强烈的耳光，目标一次次的放低，但失败的痛苦却不增反剧。终于有一天磨平了棱角，燃尽了热血，强忍着吞下不甘，故作成熟的选择了放弃，然后随波逐流数着日子生活，往事不堪回首，来事不敢展望。<img src=\"https://picx.zhimg.com/50/v2-abe09521b0cc89e4cbb15905f50a369c_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-3d97765fecc877e77e8aa112d22f1f78_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-abe09521b0cc89e4cbb15905f50a369c_r.jpg?source=1940ef5c\"/><img src=\"https://pica.zhimg.com/50/v2-43221fede97cf1e9a2c81eaf47b77f4f_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-59be885e8d441202e007f65f7127f41d_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-43221fede97cf1e9a2c81eaf47b77f4f_r.jpg?source=1940ef5c\"/><img src=\"https://pica.zhimg.com/50/v2-cf49c7944478a94d0833c7c6cef42b5d_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-12cc16501de80f135e12a3806f89a893_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-cf49c7944478a94d0833c7c6cef42b5d_r.jpg?source=1940ef5c\"/> \n<br> 但在目睹了双涡轮的永不言弃和麦昆耐着伤病也要继续前行的背影后，帝皇它才真正明白，它真正奔跑的理由，仅仅是因为奔跑本身罢了，因为继续前进，拼命向前狂奔本身远比跑步之后的结果更加让人着迷，东海帝皇最后一次的崛起没有任何理由，也正因此她无论遇到什么困难都永远不会后退，这才是真正的永不言弃。<img src=\"https://pic1.zhimg.com/50/v2-2df4cb2a8e31380df4e56295c2e0f7a4_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-7d9809123221c0f08f4a639d4bd63105_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-2df4cb2a8e31380df4e56295c2e0f7a4_r.jpg?source=1940ef5c\"/><img src=\"https://picx.zhimg.com/50/v2-21754167431cc58aa8ea6100b0194f22_720w.jpg?source=1940ef5c\" data-rawwidth=\"1916\" data-rawheight=\"1078\" data-size=\"normal\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-c4319b01b6b786a42d83b4a3ec5c1f9d_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"1916\" data-original=\"https://picx.zhimg.com/v2-21754167431cc58aa8ea6100b0194f22_r.jpg?source=1940ef5c\"/>\n <br> 帝皇在和麦昆对决时失速后第一想到的便是自己无法完成和会长的许诺，而最后一次的复活时的对决脑海里全部都是“我比任何一个人都想赢，所以，我绝对不会输。“斗志只有来自于自身，才会一往无前的狂奔。这是东海帝皇的成长，也是她浴火重生般的蜕变，不败的三冠王已经退役，而不屈的帝皇仍然在赛马场的奋勇前行。至少在我看来，坚韧的顽强是一种比起才气更值得敬仰的品质，后者是天赋，而前者是人为。<img src=\"https://pic1.zhimg.com/50/v2-86767c5ec1dec982c66d55131e47b562_720w.jpg?source=1940ef5c\" data-rawwidth=\"618\" data-rawheight=\"1024\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e30b044cecba05bf4a24721ea7969e4c_720w.jpg?source=1940ef5c\" class=\"origin_image zh-lightbox-thumb\" width=\"618\" data-original=\"https://pic1.zhimg.com/v2-86767c5ec1dec982c66d55131e47b562_r.jpg?source=1940ef5c\"/>','  起初，这部动漫在赛马娘1的基础上更换主角，当时我个人更喜欢铃鹿一些，对这部续作期待并不高。随着剧情的推进发展，极精彩的剧情内容深深地抓住了我的心，真的很精彩，看完的一段时间里，久久不能平息。“漆黑的刺客”、“领跑的双涡轮”、“掐表计时”，“东海帝皇奇迹の复活”！各种名场面我都看了数回。于此，决定做一篇长文来讲述这段故事。',3,'http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/QQ%E5%9B%BE%E7%89%8720230108102357.jpg','1','0',12,'0',1,'2023-01-08 02:26:00',1,'2023-01-08 02:26:00',0),(9,'常用的七种排序算法','# 1. 冒泡排序\n最简单的一种排序算法。假设长度为n的数组arr，要按照从小到大排序。则冒泡排序的具体过程可以描述为：首先从数组的第一个元素开始到数组最后一个元素为止，对数组中相邻的两个元素进行比较，如果位于数组左端的元素大于数组右端的元素，则交换这两个元素在数组中的位置。这样操作后数组最右端的元素即为该数组中所有元素的最大值。接着对该数组除最右端的n-1个元素进行同样的操作，再接着对剩下的n-2个元素做同样的操作，直到整个数组有序排列。\n#### 算法的时间复杂度为O(n^2)。\n\n  ```      \nvoid BubbleSort(int arr[], int length)\n{\n	for (int i = 0; i < length; i++)\n	{\n		for (int j = 0; j < length -  i - 1; j++)\n		{\n			if (arr[j] > arr[j + 1])\n			{\n				int temp;\n				temp = arr[j + 1];\n				arr[j + 1] = arr[j];\n				arr[j] = temp;\n			}\n		}\n	}\n}//每次把本轮最大的元素放在数组末位\n```\n# 2. 选择排序\n严蔚敏版《数据结构》中对选择排序的基本思想描述为：每一趟在n-i+1(i=1,2,...,n-1)个记录中选取关键字最小的记录作为有序序列中第i个记录。具体来说，假设长度为n的数组arr，要按照从小到大排序，那么先从n个数字中找到最小值min1，如果最小值min1的位置不在数组的最左端(也就是min1不等于arr[0])，则将最小值min1和arr[0]交换，接着在剩下的n-1个数字中找到最小值min2，如果最小值min2不等于arr[1]，则交换这两个数字，依次类推，直到数组arr有序排列。\n### 算法的时间复杂度为O(n^2)。\n```\n  private static void Selection(int arr[]){\n        int temp,index;\n        for (int i = 0; i < arr.length; i++) {\n            index=i;\n            for (int j =i+1; j <arr.length ; j++) {\n                if (arr[j]<arr[index]){\n                    index=j;\n                }\n            }\n            if (index!=i){\n                temp = arr[index];\n                arr[index] = arr[i];\n                arr[i] = temp;\n            }\n        }\n    }//让顺位上的元素依次变成最小值\n```\n\n# 3. 插入排序\n![image62151.png](http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/20180608204907706.png)\n\n插入排序的基本思想就是将无序序列插入到有序序列中。例如要将数组arr=[4,2,8,0,5,1]排序，可以将4看做是一个有序序列(图中用蓝色标出)，将[2,8,0,5,1]看做一个无序序列。无序序列中2比4小，于是将2插入到4的左边，此时有序序列变成了[2,4]，无序序列变成了[8,0,5,1]。无序序列中8比4大，于是将8插入到4的右边，有序序列变成了[2,4,8],无序序列变成了[0,5,1]。以此类推，最终数组按照从小到大排序。\n### 该算法的时间复杂度为O(n^2)。\n```\n// 插入排序\n private static void InsertSort(int arr[]){\n        int temp;\n        int j;\n        for (int i = 1; i <arr.length; i++) {\n            if (arr[i]<arr[i-1]){\n              temp=arr[i];\n                for (j = i-1;j>=0&&temp<arr[j];j--) {\n                    arr[j+1]=arr[j];\n                }\n                arr[j+1]=temp;\n            }\n\n        }\n    }//第二个for循环目的是把前面的有序数组推进n位，然后把新元素插进数组。\n       有序数组右端位max值，所以只需添加较小元素，较大元素依次后延。\n```\n\n# 4. 希尔排序\n希尔排序(Shell\'s Sort)在插入排序算法的基础上进行了改进，算法的时间复杂度与前面几种算法相比有较大的改进。其算法的基本思想是：先将待排记录序列分割成为若干子序列分别进行插入排序，待整个序列中的记录\"基本有序\"时，再对全体记录进行一次直接插入排序。\n### 时间复杂度的下界是O(n*log2n)\n![imaeg16516.png](http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/20180608213804533.png)\n```\n    private void ShellSort(int arr[]){\n        //将数组分三份，increasement代表每份中的量对应下一份中的距离;\n        int increasement= arr.length;\n        int i,j,k,temp;\n        do {\n            increasement=increasement/3+1;\n            for ( i = 0; i <increasement ; i++) {\n                for (j=i+increasement;j<arr.length;j+=increasement)\n                {\n                    if (arr[j]<arr[j-increasement]){\n                        temp=arr[j];\n                    for (k = j-increasement;k>=0&&temp<arr[k];k-=increasement) {\n                            arr[k+1]=arr[k];\n                        }\n                        arr[k+increasement]=temp;\n                    }\n                }\n            }\n        }while (increasement>1);\n    }//和插入排序大同小异，只是是分组多次的插入排序，有分组增量increasement\n```\n# 5. 快速排序\n\n快速排序的基本思想是：通过一趟排序将待排记录分割成独立的两部分，其中一部分记录的关键字均比另一部分记录的关键字小，则可分别对这两部分记录继续进行排序，已达到整个序列有序。一趟快速排序的具体过程可描述为：从待排序列中任意选取一个记录(通常选取第一个记录)作为基准值，然后将记录中关键字比它小的记录都安置在它的位置之前，将记录中关键字比它大的记录都安置在它的位置之后。这样，以该基准值为分界线，将待排序列分成的两个子序列。\n\n一趟快速排序的具体做法为：设置两个指针low和high分别指向待排序列的开始和结尾，记录下基准值baseval(待排序列的第一个记录)，然后先从high所指的位置向前搜索直到找到一个小于baseval的记录并互相交换，接着从low所指向的位置向后搜索直到找到一个大于baseval的记录并互相交换，重复这两个步骤直到low=high为止。\n\n###  时间复杂度O(n(logn))\n```\n    public static void QuickSort(int[] arr,int left,int right){\n        if (left>=right){\n            return;\n        }\n        int start=left;\n        int end=right;\n        int val=arr[left];\n        while (left<right){\n            while (left<right&&arr[right]>=val){\n                right--;\n            }\n            if (left<right)\n            {\n                arr[left]=arr[right];\n                left++;\n            }\n            while(left<right&&arr[left]<=val){\n                left++;\n            }\n            if (left<right){\n                arr[right]=arr[left];\n                right--;\n            }\n        }\n        arr[left]=val;\n        QuickSort(arr,start,left-1);\n        QuickSort(arr,right+1, end);\n    }//取出lefe下的元素，存值为val，此时left指针指向null\n       left将左边大的元素放至右边，right将右边小的元素放至左边\n       一边放一次元素后，转为另一边放元素\n```\n# 6. 归并排序\n\n“归并”的含义是将两个或两个以上的有序序列组合成一个新的有序表。假设初始序列含有n个记录，则可以看成是n个有序的子序列，每个子序列的长度为1，然后两两归并，得到[n/2]（[x]表示不小于x的最小整数）个长度为2(或者是1)的有序子序列，再两两归并。如此重复，直到得到一个长度为n的有序序列为止。这种排序方法称为2-路归并排序。\n![image2651.png](http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/20180610102841158.png)\n### 时间复杂度O(nlogn)\n```\nvoid MergeSort(int arr[], int start, int end, int[] temp)\n    {\n        if (start >= end)\n            return;\n        int mid = (start + end) / 2;\n        MergeSort(arr, start, mid, temp);\n        MergeSort(arr, mid + 1, end, temp);\n\n        // 合并两个有序序列\n        int length = 0; // 表示辅助空间有多少个元素\n        int i_start = start;\n        int i_end = mid;\n        int j_start = mid + 1;\n        int j_end = end;\n        while (i_start <= i_end && j_start <= j_end)\n        {\n            if (arr[i_start] < arr[j_start])\n            {\n                temp[length] = arr[i_start];\n                length++;\n                i_start++;\n            }\n            else\n            {\n                temp[length] = arr[j_start];\n                length++;\n                j_start++;\n            }\n        }\n        while (i_start <= i_end)\n        {\n            temp[length] = arr[i_start];\n            i_start++;\n            length++;\n        }\n        while (j_start <= j_end)\n        {\n            temp[length] = arr[j_start];\n            length++;\n            j_start++;\n        }\n        // 把辅助空间的数据放到原空间\n        for (int i = 0; i < length; i++)\n        {\n            arr[start + i] = temp[i];\n        }\n    }//将原数组一分为2，从新的两个数组中依次将元素放进另一个新数组temp\n       最后将temp的值存放到原数组arr中(从start开始)\n```\n\n# 7. 堆排序\n堆的定义如下: n个元素的序列{k1, k2, ... , kn}当且仅当满足一下条件时，称之为堆。\n![image625616.png](http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/20180610110041162.png)\n可以将堆看做是一个完全二叉树。并且，每个结点的值都大于等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于等于其左右孩子结点的值，称为小顶堆。\n\n堆排序(Heap Sort)是利用堆进行排序的方法。其基本思想为：将待排序列构造成一个大顶堆(或小顶堆)，整个序列的最大值(或最小值)就是堆顶的根结点，将根节点的值和堆数组的末尾元素交换，此时末尾元素就是最大值(或最小值)，然后将剩余的n-1个序列重新构造成一个堆，这样就会得到n个元素中的次大值(或次小值)，如此反复执行，最终得到一个有序序列。\n![image116.png](http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/20180610113358546.png)\n```\n\n/*\n	@param arr 待调整的数组\n	@param i 待调整的结点的下标\n	@param length 数组的长度\n*/\nvoid HeapAdjust(int arr[], int i, int length)\n{\n	// 调整i位置的结点\n	// 先保存当前结点的下标\n	int max = i;\n	// 当前结点左右孩子结点的下标\n	int lchild = i * 2 + 1;\n	int rchild = i * 2 + 2;\n	if (lchild < length && arr[lchild] > arr[max])\n	{\n		max = lchild;\n	}\n	if (rchild < length && arr[rchild] > arr[max])\n	{\n		max = rchild;\n	}\n	// 若i处的值比其左右孩子结点的值小，就将其和最大值进行交换\n	if (max != i)\n	{\n		int temp;\n		temp = arr[i];\n		arr[i] = arr[max];\n		arr[max] = temp;\n		// 递归\n		HeapAdjust(arr, max, length);\n	}\n\n}//选择一个非叶子节点，将其下所有结点进行堆排序交换\n```','排序算法作为最经典的算法，是每个程序员需要掌握的基础算法。桶排序，基数排序，计数排序，这三种算法由于使用频率不高，本文没用对其进行收录。掌握以下七种算法的核心思想以及使用场景，已经足够解决绝大部分的排序问题。',4,'http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/v2-19a08c5075975cd61dd9f34197683d4d_b.jpg','1','0',14,'0',1,'2023-01-08 02:59:05',1,'2023-01-08 05:45:13',0);

/*Table structure for table `sg_article_tag` */

DROP TABLE IF EXISTS `sg_article_tag`;

CREATE TABLE `sg_article_tag` (
  `article_id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '文章id',
  `tag_id` bigint(20) NOT NULL DEFAULT '0' COMMENT '标签id',
  PRIMARY KEY (`article_id`,`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COMMENT='文章标签关联表';

/*Data for the table `sg_article_tag` */

insert  into `sg_article_tag`(`article_id`,`tag_id`) values (1,4),(2,5),(3,4),(3,5),(6,4),(7,4),(8,4),(9,3);

/*Table structure for table `sg_category` */

DROP TABLE IF EXISTS `sg_category`;

CREATE TABLE `sg_category` (
  `id` bigint(200) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) DEFAULT NULL COMMENT '分类名',
  `pid` bigint(200) DEFAULT '-1' COMMENT '父分类id，如果没有父分类为-1',
  `description` varchar(512) DEFAULT NULL COMMENT '描述',
  `status` char(1) DEFAULT '0' COMMENT '状态0:正常,1禁用',
  `create_by` bigint(200) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_by` bigint(200) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `del_flag` int(11) DEFAULT '0' COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COMMENT='分类表';

/*Data for the table `sg_category` */

insert  into `sg_category`(`id`,`name`,`pid`,`description`,`status`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`) values (1,'Java',-1,'后端开发语言','0',NULL,NULL,NULL,NULL,0),(2,'游戏',-1,'博主的娱乐项目','0',NULL,NULL,NULL,NULL,0),(3,'漫画',-1,'漫画简评','0',NULL,NULL,NULL,NULL,0),(4,'算法',-1,'部分算法相关','0',NULL,NULL,NULL,NULL,0);

/*Table structure for table `sg_comment` */

DROP TABLE IF EXISTS `sg_comment`;

CREATE TABLE `sg_comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `type` char(1) DEFAULT '0' COMMENT '评论类型（0代表文章评论，1代表友链评论）',
  `article_id` bigint(20) DEFAULT NULL COMMENT '文章id',
  `root_id` bigint(20) DEFAULT '-1' COMMENT '根评论id',
  `content` varchar(512) DEFAULT NULL COMMENT '评论内容',
  `to_comment_user_id` bigint(20) DEFAULT '-1' COMMENT '所回复的目标评论的userid',
  `to_comment_id` bigint(20) DEFAULT '-1' COMMENT '回复目标评论id',
  `create_by` bigint(20) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_by` bigint(20) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `del_flag` int(1) DEFAULT '0' COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8mb4 COMMENT='评论表';

/*Data for the table `sg_comment` */

insert  into `sg_comment`(`id`,`type`,`article_id`,`root_id`,`content`,`to_comment_user_id`,`to_comment_id`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`) values (33,'1',1,-1,'高手进',-1,-1,1,'2023-01-07 14:19:54',1,'2023-01-07 14:19:54',0),(35,'0',2,-1,'文化传播的主力',-1,-1,1,'2023-01-07 15:08:05',1,'2023-01-07 15:08:05',0),(38,'0',8,-1,'勝つか負けるか!',-1,-1,1,'2023-01-08 10:39:35',1,'2023-01-08 10:39:35',0),(39,'0',9,-1,'[给力][给力][给力]',-1,-1,1,'2023-01-08 13:45:40',1,'2023-01-08 13:45:40',0),(40,'0',1,-1,'[棒棒][棒棒][棒棒]',-1,-1,1,'2023-01-08 15:35:28',1,'2023-01-08 15:35:28',0),(41,'0',1,40,'[太开心]',1,40,1,'2023-01-08 15:36:54',1,'2023-01-08 15:36:54',0);

/*Table structure for table `sg_link` */

DROP TABLE IF EXISTS `sg_link`;

CREATE TABLE `sg_link` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(256) DEFAULT NULL,
  `logo` varchar(512) DEFAULT NULL,
  `description` varchar(512) DEFAULT NULL,
  `address` varchar(128) DEFAULT NULL COMMENT '网站地址',
  `status` char(1) DEFAULT '2' COMMENT '审核状态 (0代表审核通过，1代表审核未通过，2代表未审核)',
  `create_by` bigint(20) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_by` bigint(20) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `del_flag` int(1) DEFAULT '0' COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COMMENT='友链';

/*Data for the table `sg_link` */

insert  into `sg_link`(`id`,`name`,`logo`,`description`,`address`,`status`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`) values (1,'百度','https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F05%2F10%2F146286696706220328.PNG&refer=http%3A%2F%2Fn1.itc.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1646205529&t=f942665181eb9b0685db7a6f59d59975','百度一下，你就知道','https://www.baidu.com','0',NULL,'2022-01-13 08:25:47',NULL,'2022-01-13 08:36:14',0),(2,'天涯论坛','http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/QQ%E5%9B%BE%E7%89%8720230107134829.png','浪迹于天涯论坛','https://www.tianya.cn/','0',NULL,'2022-01-13 09:06:10',NULL,'2022-01-13 09:07:09',0),(3,'金山网络','http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/562c11dfa9ec8a1386cf5915fd03918fa1ecc06a.png','金山网安','https://www.kingsoft.com/','0',NULL,'2022-01-13 09:23:01',NULL,'2022-01-13 09:23:01',0);

/*Table structure for table `sg_tag` */

DROP TABLE IF EXISTS `sg_tag`;

CREATE TABLE `sg_tag` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) DEFAULT NULL COMMENT '标签名',
  `create_by` bigint(20) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_by` bigint(20) DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `del_flag` int(1) DEFAULT '0' COMMENT '删除标志（0代表未删除，1代表已删除）',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COMMENT='标签';

/*Data for the table `sg_tag` */

insert  into `sg_tag`(`id`,`name`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`,`remark`) values (1,'Sql',NULL,NULL,NULL,'2022-01-11 09:20:50',0,'数据库相关知识'),(2,'小说',NULL,'2022-01-11 09:20:55',NULL,'2022-01-11 09:20:55',0,'小说简评'),(3,'算法',NULL,'2022-01-11 09:21:07',NULL,'2022-01-11 09:21:07',0,'部分算法相关'),(4,'漫画',NULL,'2022-01-13 15:22:43',NULL,'2022-01-13 15:22:43',0,'漫画简评'),(5,'游戏',NULL,'2023-01-07 14:23:37',NULL,'2022-12-01 16:23:44',0,'游戏简介');

/*Table structure for table `sys_menu` */

DROP TABLE IF EXISTS `sys_menu`;

CREATE TABLE `sys_menu` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '菜单ID',
  `menu_name` varchar(50) NOT NULL COMMENT '菜单名称',
  `parent_id` bigint(20) DEFAULT '0' COMMENT '父菜单ID',
  `order_num` int(4) DEFAULT '0' COMMENT '显示顺序',
  `path` varchar(200) DEFAULT '' COMMENT '路由地址',
  `component` varchar(255) DEFAULT NULL COMMENT '组件路径',
  `is_frame` int(1) DEFAULT '1' COMMENT '是否为外链（0是 1否）',
  `menu_type` char(1) DEFAULT '' COMMENT '菜单类型（M目录 C菜单 F按钮）',
  `visible` char(1) DEFAULT '0' COMMENT '菜单状态（0显示 1隐藏）',
  `status` char(1) DEFAULT '0' COMMENT '菜单状态（0正常 1停用）',
  `perms` varchar(100) DEFAULT NULL COMMENT '权限标识',
  `icon` varchar(100) DEFAULT '#' COMMENT '菜单图标',
  `create_by` bigint(20) DEFAULT NULL COMMENT '创建者',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` bigint(20) DEFAULT NULL COMMENT '更新者',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `remark` varchar(500) DEFAULT '' COMMENT '备注',
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2029 DEFAULT CHARSET=utf8 COMMENT='菜单权限表';

/*Data for the table `sys_menu` */

insert  into `sys_menu`(`id`,`menu_name`,`parent_id`,`order_num`,`path`,`component`,`is_frame`,`menu_type`,`visible`,`status`,`perms`,`icon`,`create_by`,`create_time`,`update_by`,`update_time`,`remark`,`del_flag`) values (1,'系统管理',0,1,'system',NULL,1,'M','0','0','','system',0,'2021-11-12 10:46:19',0,NULL,'系统管理目录','0'),(100,'用户管理',1,1,'user','system/user/index',1,'C','0','0','system:user:list','user',0,'2021-11-12 10:46:19',1,'2022-07-31 15:47:58','用户管理菜单','0'),(101,'角色管理',1,2,'role','system/role/index',1,'C','0','0','system:role:list','peoples',0,'2021-11-12 10:46:19',0,NULL,'角色管理菜单','0'),(102,'菜单管理',1,3,'menu','system/menu/index',1,'C','0','0','system:menu:list','tree-table',0,'2021-11-12 10:46:19',0,NULL,'菜单管理菜单','0'),(1001,'用户查询',100,1,'','',1,'F','0','0','system:user:query','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1002,'用户新增',100,2,'','',1,'F','0','0','system:user:add','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1003,'用户修改',100,3,'','',1,'F','0','0','system:user:edit','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1004,'用户删除',100,4,'','',1,'F','0','0','system:user:remove','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1005,'用户导出',100,5,'','',1,'F','0','0','system:user:export','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1006,'用户导入',100,6,'','',1,'F','0','0','system:user:import','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1007,'重置密码',100,7,'','',1,'F','0','0','system:user:resetPwd','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1008,'角色查询',101,1,'','',1,'F','0','0','system:role:query','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1009,'角色新增',101,2,'','',1,'F','0','0','system:role:add','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1010,'角色修改',101,3,'','',1,'F','0','0','system:role:edit','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1011,'角色删除',101,4,'','',1,'F','0','0','system:role:remove','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1012,'角色导出',101,5,'','',1,'F','0','0','system:role:export','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1013,'菜单查询',102,1,'','',1,'F','0','0','system:menu:query','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1014,'菜单新增',102,2,'','',1,'F','0','0','system:menu:add','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1015,'菜单修改',102,3,'','',1,'F','0','0','system:menu:edit','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(1016,'菜单删除',102,4,'','',1,'F','0','0','system:menu:remove','#',0,'2021-11-12 10:46:19',0,NULL,'','0'),(2017,'内容管理',0,4,'content',NULL,1,'M','0','0',NULL,'table',NULL,'2022-01-08 02:44:38',1,'2022-07-31 12:34:23','','0'),(2018,'分类管理',2017,1,'category','content/category/index',1,'C','0','0','content:category:list','example',NULL,'2022-01-08 02:51:45',NULL,'2022-01-08 02:51:45','','0'),(2019,'文章管理',2017,0,'article','content/article/index',1,'C','0','0','content:article:list','build',NULL,'2022-01-08 02:53:10',NULL,'2022-01-08 02:53:10','','0'),(2021,'标签管理',2017,6,'tag','content/tag/index',1,'C','0','0','content:tag:index','button',NULL,'2022-01-08 02:55:37',NULL,'2022-01-08 02:55:50','','0'),(2022,'友链管理',2017,4,'link','content/link/index',1,'C','0','0','content:link:list','404',NULL,'2022-01-08 02:56:50',NULL,'2022-01-08 02:56:50','','0'),(2023,'写博文',0,0,'write','content/article/write/index',1,'C','0','0','content:article:writer','build',NULL,'2022-01-08 03:39:58',1,'2022-07-31 22:07:05','','0'),(2024,'友链新增',2022,0,'',NULL,1,'F','0','0','content:link:add','#',NULL,'2022-01-16 07:59:17',NULL,'2022-01-16 07:59:17','','0'),(2025,'友链修改',2022,1,'',NULL,1,'F','0','0','content:link:edit','#',NULL,'2022-01-16 07:59:44',NULL,'2022-01-16 07:59:44','','0'),(2026,'友链删除',2022,1,'',NULL,1,'F','0','0','content:link:remove','#',NULL,'2022-01-16 08:00:05',NULL,'2022-01-16 08:00:05','','0'),(2027,'友链查询',2022,2,'',NULL,1,'F','0','0','content:link:query','#',NULL,'2022-01-16 08:04:09',NULL,'2022-01-16 08:04:09','','0'),(2028,'导出分类',2018,1,'',NULL,1,'F','0','0','content:category:export','#',NULL,'2022-01-21 07:06:59',NULL,'2022-01-21 07:06:59','','0');

/*Table structure for table `sys_role` */

DROP TABLE IF EXISTS `sys_role`;

CREATE TABLE `sys_role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '角色ID',
  `role_name` varchar(30) NOT NULL COMMENT '角色名称',
  `role_key` varchar(100) NOT NULL COMMENT '角色权限字符串',
  `role_sort` int(4) NOT NULL COMMENT '显示顺序',
  `status` char(1) NOT NULL COMMENT '角色状态（0正常 1停用）',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标志（0代表存在 1代表删除）',
  `create_by` bigint(20) DEFAULT NULL COMMENT '创建者',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` bigint(20) DEFAULT NULL COMMENT '更新者',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `remark` varchar(500) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='角色信息表';

/*Data for the table `sys_role` */

insert  into `sys_role`(`id`,`role_name`,`role_key`,`role_sort`,`status`,`del_flag`,`create_by`,`create_time`,`update_by`,`update_time`,`remark`) values (1,'系统管理员','admin',1,'0','0',0,'2021-11-12 10:46:19',0,NULL,'项目负责人'),(2,'普通角色','common',2,'0','0',0,'2021-11-12 10:46:19',0,'2022-01-01 22:32:58','普通角色'),(11,'文章审核员','aggag',5,'0','0',NULL,'2022-01-06 14:07:40',NULL,'2022-01-07 03:48:48','文章审核'),(12,'友链审核员','link',1,'0','0',NULL,'2022-01-16 06:49:30',NULL,'2022-01-16 08:05:09','友联审核');

/*Table structure for table `sys_role_menu` */

DROP TABLE IF EXISTS `sys_role_menu`;

CREATE TABLE `sys_role_menu` (
  `role_id` bigint(20) NOT NULL COMMENT '角色ID',
  `menu_id` bigint(20) NOT NULL COMMENT '菜单ID',
  PRIMARY KEY (`role_id`,`menu_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色和菜单关联表';

/*Data for the table `sys_role_menu` */

insert  into `sys_role_menu`(`role_id`,`menu_id`) values (0,0),(1,0),(2,1),(2,102),(2,1013),(2,1014),(2,1015),(2,1016),(2,2000),(3,2),(3,3),(3,4),(3,100),(3,101),(3,103),(3,104),(3,105),(3,106),(3,107),(3,108),(3,109),(3,110),(3,111),(3,112),(3,113),(3,114),(3,115),(3,116),(3,500),(3,501),(3,1001),(3,1002),(3,1003),(3,1004),(3,1005),(3,1006),(3,1007),(3,1008),(3,1009),(3,1010),(3,1011),(3,1012),(3,1017),(3,1018),(3,1019),(3,1020),(3,1021),(3,1022),(3,1023),(3,1024),(3,1025),(3,1026),(3,1027),(3,1028),(3,1029),(3,1030),(3,1031),(3,1032),(3,1033),(3,1034),(3,1035),(3,1036),(3,1037),(3,1038),(3,1039),(3,1040),(3,1041),(3,1042),(3,1043),(3,1044),(3,1045),(3,1046),(3,1047),(3,1048),(3,1049),(3,1050),(3,1051),(3,1052),(3,1053),(3,1054),(3,1055),(3,1056),(3,1057),(3,1058),(3,1059),(3,1060),(3,2000),(11,1),(11,100),(11,101),(11,102),(11,103),(11,104),(11,105),(11,106),(11,107),(11,108),(11,500),(11,501),(11,1001),(11,1002),(11,1003),(11,1004),(11,1005),(11,1006),(11,1007),(11,1008),(11,1009),(11,1010),(11,1011),(11,1012),(11,1013),(11,1014),(11,1015),(11,1016),(11,1017),(11,1018),(11,1019),(11,1020),(11,1021),(11,1022),(11,1023),(11,1024),(11,1025),(11,1026),(11,1027),(11,1028),(11,1029),(11,1030),(11,1031),(11,1032),(11,1033),(11,1034),(11,1035),(11,1036),(11,1037),(11,1038),(11,1039),(11,1040),(11,1041),(11,1042),(11,1043),(11,1044),(11,1045),(11,2000),(11,2003),(11,2004),(11,2005),(11,2006),(11,2007),(11,2008),(11,2009),(11,2010),(11,2011),(11,2012),(11,2013),(11,2014),(12,2017),(12,2022),(12,2024),(12,2025),(12,2026),(12,2027);

/*Table structure for table `sys_user` */

DROP TABLE IF EXISTS `sys_user`;

CREATE TABLE `sys_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `user_name` varchar(64) NOT NULL DEFAULT 'NULL' COMMENT '用户名',
  `nick_name` varchar(64) NOT NULL DEFAULT 'NULL' COMMENT '昵称',
  `password` varchar(64) NOT NULL DEFAULT 'NULL' COMMENT '密码',
  `type` char(1) DEFAULT '0' COMMENT '用户类型：0代表普通用户，1代表管理员',
  `status` char(1) DEFAULT '0' COMMENT '账号状态（0正常 1停用）',
  `email` varchar(64) DEFAULT NULL COMMENT '邮箱',
  `phonenumber` varchar(32) DEFAULT NULL COMMENT '手机号',
  `sex` char(1) DEFAULT NULL COMMENT '用户性别（0男，1女，2未知）',
  `avatar` varchar(128) DEFAULT NULL COMMENT '头像',
  `create_by` bigint(20) DEFAULT NULL COMMENT '创建人的用户id',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` bigint(20) DEFAULT NULL COMMENT '更新人',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `del_flag` int(11) DEFAULT '0' COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14787164048663 DEFAULT CHARSET=utf8mb4 COMMENT='用户表';

/*Data for the table `sys_user` */

insert  into `sys_user`(`id`,`user_name`,`nick_name`,`password`,`type`,`status`,`email`,`phonenumber`,`sex`,`avatar`,`create_by`,`create_time`,`update_by`,`update_time`,`del_flag`) values (1,'Zhc','zhangHaoChen','$2a$10$Jnq31rRkNV3RNzXe0REsEOSKaYK8UgVZZqlNlNXqn.JeVcj2NdeZy','1','0','115994659@qq.com','18888888888','0','http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/QQ%E5%9B%BE%E7%89%8720211212222933%20%281%29.png',NULL,'2022-01-05 09:01:56',1,'2022-01-30 15:37:03',0),(2,'Jack','Jack','$2a$10$Jnq31rRkNV3RNzXe0REsEOSKaYK8UgVZZqlNlNXqn.JeVcj2NdeZy','1','0','543873002@163.com','337845818','0','http://rnuqwcrv5.bkt.clouddn.com/2023/01/02/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220921123020.jpg',NULL,'2022-01-05 13:28:43',NULL,'2022-01-05 13:28:43',0),(4,'sg2','dsadd','$2a$10$kY4T3SN7i4muBccZppd2OOkhxMN6yt8tND1sF89hXOaFylhY2T3he','1','0','','19098790742','0',NULL,NULL,NULL,NULL,NULL,1),(5,'Lucy','tteqe','1234','1','0',NULL,'18246845873','1',NULL,NULL,'2022-01-06 03:51:13',NULL,'2022-01-06 07:00:50',0),(6,'Stranger','sangeng','$2a$10$Jnq31rRkNV3RNzXe0REsEOSKaYK8UgVZZqlNlNXqn.JeVcj2NdeZy','1','0','2341112332@qq.com','17777777777','0',NULL,NULL,'2022-01-16 06:54:26',NULL,'2022-01-16 07:06:34',0),(14787164048662,'weixin','weixin','$2a$10$y3k3fnMZsBNihsVLXWfI8uMNueVXBI08k.LzWYaKsW8CW7xXy18wC','0','0','weixin@qq.com',NULL,NULL,NULL,-1,'2022-01-30 17:18:44',-1,'2022-01-30 17:18:44',1);

/*Table structure for table `sys_user_role` */

DROP TABLE IF EXISTS `sys_user_role`;

CREATE TABLE `sys_user_role` (
  `user_id` bigint(20) NOT NULL COMMENT '用户ID',
  `role_id` bigint(20) NOT NULL COMMENT '角色ID',
  PRIMARY KEY (`user_id`,`role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户和角色关联表';

/*Data for the table `sys_user_role` */

insert  into `sys_user_role`(`user_id`,`role_id`) values (1,1),(2,2),(5,2),(6,12);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
